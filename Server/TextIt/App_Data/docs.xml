<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TextIt</name>
    </assembly>
    <members>
        <member name="M:TextIt.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:TextIt.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:TextIt.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:TextIt.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:TextIt.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:TextIt.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:TextIt.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:TextIt.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:TextIt.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:TextIt.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForMediaType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the sample directly for all actions with the specified media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:TextIt.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:TextIt.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:TextIt.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:TextIt.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:TextIt.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:TextIt.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:TextIt.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,TextIt.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:TextIt.Areas.HelpPage.HelpPageConfigurationExtensions.GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the model description generator.
            </summary>
            <param name="config">The configuration.</param>
            <returns>The <see cref="T:TextIt.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator"/></returns>
        </member>
        <member name="M:TextIt.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:TextIt.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:TextIt.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
            Describes a type model.
            </summary>
        </member>
        <member name="T:TextIt.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
            Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:TextIt.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
            Use this attribute to change the name of the <see cref="T:TextIt.Areas.HelpPage.ModelDescriptions.ModelDescription"/> generated for a type.
            </summary>
        </member>
        <member name="T:TextIt.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:TextIt.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextIt.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:TextIt.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:TextIt.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:TextIt.Areas.HelpPage.Models.HelpPageApiModel.UriParameters">
            <summary>
            Gets or sets the <see cref="T:TextIt.Areas.HelpPage.ModelDescriptions.ParameterDescription"/> collection that describes the URI parameters for the API.
            </summary>
        </member>
        <member name="P:TextIt.Areas.HelpPage.Models.HelpPageApiModel.RequestDocumentation">
            <summary>
            Gets or sets the documentation for the request.
            </summary>
        </member>
        <member name="P:TextIt.Areas.HelpPage.Models.HelpPageApiModel.RequestModelDescription">
            <summary>
            Gets or sets the <see cref="T:TextIt.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the request body.
            </summary>
        </member>
        <member name="P:TextIt.Areas.HelpPage.Models.HelpPageApiModel.RequestBodyParameters">
            <summary>
            Gets the request body parameter descriptions.
            </summary>
        </member>
        <member name="P:TextIt.Areas.HelpPage.Models.HelpPageApiModel.ResourceDescription">
            <summary>
            Gets or sets the <see cref="T:TextIt.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the resource.
            </summary>
        </member>
        <member name="P:TextIt.Areas.HelpPage.Models.HelpPageApiModel.ResourceProperties">
            <summary>
            Gets the resource property descriptions.
            </summary>
        </member>
        <member name="P:TextIt.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:TextIt.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:TextIt.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:TextIt.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:TextIt.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TextIt.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="P:TextIt.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:TextIt.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:TextIt.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="P:TextIt.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories">
            <summary>
            Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,
            stopping when the factory successfully returns a non-<see langref="null"/> object.
            </summary>
            <remarks>
            Collection includes just <see cref="M:TextIt.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)"/> initially. Use
            <code>SampleObjectFactories.Insert(0, func)</code> to provide an override and
            <code>SampleObjectFactories.Add(func)</code> to provide a fallback.</remarks>
        </member>
        <member name="M:TextIt.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:TextIt.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:TextIt.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,TextIt.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:TextIt.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,TextIt.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:TextIt.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:TextIt.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:TextIt.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create
            one using <see cref="M:TextIt.Areas.HelpPage.HelpPageSampleGenerator.DefaultSampleObjectFactory(TextIt.Areas.HelpPage.HelpPageSampleGenerator,System.Type)"/> (which wraps an <see cref="T:TextIt.Areas.HelpPage.ObjectGenerator"/>) and other
            factories in <see cref="P:TextIt.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:TextIt.Areas.HelpPage.HelpPageSampleGenerator.ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)">
            <summary>
            Resolves the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The type.</returns>
        </member>
        <member name="M:TextIt.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},TextIt.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:TextIt.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="T:TextIt.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:TextIt.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:TextIt.Areas.HelpPage.HelpPageSampleKey"/> based on media type.
            </summary>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:TextIt.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:TextIt.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:TextIt.Areas.HelpPage.HelpPageSampleKey.#ctor(TextIt.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:TextIt.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:TextIt.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:TextIt.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:TextIt.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,TextIt.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:TextIt.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:TextIt.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:TextIt.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:TextIt.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:TextIt.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:TextIt.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:TextIt.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:TextIt.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:TextIt.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:TextIt.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:TextIt.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextIt.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:TextIt.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:TextIt.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:TextIt.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:TextIt.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:TextIt.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:TextIt.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:TextIt.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextIt.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="T:TextIt.Controllers.AccountController">
            <summary>
            A Controller for Authorization to this server
            </summary>
        </member>
        <member name="M:TextIt.Controllers.AccountController.#ctor">
            <summary>
            Contruct
            </summary>
        </member>
        <member name="M:TextIt.Controllers.AccountController.#ctor(TextIt.ApplicationUserManager,Microsoft.Owin.Security.ISecureDataFormat{Microsoft.Owin.Security.AuthenticationTicket})">
            <summary>
            Contruct with values
            </summary>
            <param name="userManager"><see cref="T:TextIt.ApplicationUserManager"/></param>
            <param name="accessTokenFormat"><see cref="T:Microsoft.Owin.Security.ISecureDataFormat`1"/></param>
        </member>
        <member name="P:TextIt.Controllers.AccountController.UserManager">
            <summary>
            The User Manager for this Controller
            </summary>
        </member>
        <member name="P:TextIt.Controllers.AccountController.AccessTokenFormat">
            <summary>
            The Access Token Format for this Controller
            </summary>
        </member>
        <member name="M:TextIt.Controllers.AccountController.CheckToken">
            <summary>
            Check if you are currently authenticated.
            </summary>
            <returns>
            HTTP 202 if you are authenticated,
            HTTP 403 if you are not
            </returns>
        </member>
        <member name="M:TextIt.Controllers.AccountController.GetUserInfo">
            <summary>
            Gets the current users infomation
            </summary>
            <returns></returns>
        </member>
        <member name="M:TextIt.Controllers.AccountController.GetUserFriends">
            <summary>
            Gets a list of facebook friends that have logged in to
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.List`1"/>
            </returns>
        </member>
        <member name="M:TextIt.Controllers.AccountController.Logout">
            <summary>
            Logout from the server
            </summary>
            <returns></returns>
        </member>
        <member name="M:TextIt.Controllers.AccountController.RegisterExternalToken(TextIt.Models.RegisterExternalTokenBindingModel)">
            <summary>
            Login / Register with a Facebook Token
            </summary>
            <param name="model">A <see cref="T:TextIt.Models.RegisterExternalTokenBindingModel"/> containing a facebook access token</param>
            <returns>
            A <see cref="T:System.Security.Claims.ClaimsIdentity"/> if successful, 
            otherwise a HTTP 500;
            </returns>
        </member>
        <member name="M:TextIt.Controllers.AccountController.Dispose(System.Boolean)">
            <summary>
            Dispose this object
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:TextIt.Controllers.GameController">
            <summary>
            A Controler to access infomation about the games state, Create Games and List Users Games.
            </summary>
        </member>
        <member name="M:TextIt.Controllers.GameController.GetGameState(System.String)">
            <summary>
            Get a <see cref="T:TextIt.Games.GameState"/> from the specified <see cref="T:TextIt.Models.Game"/> 
            </summary>
            <param name="gameId">The <see cref="T:TextIt.Models.Game"/>.Id</param>
            <returns>
            A <see cref="T:TextIt.Games.GameState"/> accoicated to the <see cref="T:TextIt.Models.Game"/> (the type is specified in the <see cref="T:TextIt.Games.GameState"/>)
            </returns>
        </member>
        <member name="M:TextIt.Controllers.GameController.CollectGames(System.Nullable{TextIt.Models.GameApplication.GameCategory})">
            <summary>
            Get All <see cref="T:TextIt.Models.GameApplication"/>s in the Database at the current moment in time.
            </summary>
            <param name="gameCategoryFilter">A <see cref="T:TextIt.Models.GameApplication.GameCategory"/> that you wish to only return</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/></returns>
        </member>
        <member name="M:TextIt.Controllers.GameController.ListGames(System.Nullable{TextIt.Models.GameApplication.GameCategory})">
            <summary>
            List the current <see cref="T:TextIt.Models.ApplicationUser"/>s Games.
            </summary>
            <param name="gameCategoryFilter">A <see cref="T:TextIt.Models.GameApplication.GameCategory"/> that you wish to only return</param>
            <returns>
            A <see cref="T:System.Collections.Generic.List`1"/>
            </returns>
        </member>
        <member name="M:TextIt.Controllers.GameController.ListInProgressGames(System.Nullable{TextIt.Models.GameApplication.GameCategory})">
            <summary>
            Gets the current <see cref="T:TextIt.Models.Game"/>s that are running on the <see cref="T:TextIt.Hubs.LobbyHub"/> accociated to the current <see cref="T:TextIt.Models.ApplicationUser"/>
            </summary>
            <param name="gameCategoryFilter">A <see cref="T:TextIt.Models.GameApplication.GameCategory"/> that you wish to only return</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/></returns>
        </member>
        <member name="M:TextIt.Controllers.GameController.CreateGame(System.Int32)">
            <summary>
            Create a game for the current <see cref="T:TextIt.Models.ApplicationUser"/>.
            </summary>
            <param name="gameApplicationId">The <see cref="T:TextIt.Models.GameApplication"/> that you wish to create</param>
            <returns>
            An Instance of <see cref="T:TextIt.Models.Game"/>.
            </returns>
        </member>
        <member name="T:TextIt.Controllers.InviteController">
            <summary>
            Invite Controller
            </summary>
        </member>
        <member name="M:TextIt.Controllers.InviteController.InviteToGame(System.String,System.String)">
            <summary>
            Invite a <see cref="T:TextIt.Models.ApplicationUser"/> to a <see cref="T:TextIt.Models.Game"/>
            </summary>
            <param name="gameId">The Id of the <see cref="T:TextIt.Models.Game"/></param>
            <param name="inviteUserId">The Id or the <see cref="T:TextIt.Models.ApplicationUser"/></param>
            <returns></returns>
        </member>
        <member name="M:TextIt.Controllers.InviteController.ListInvites">
            <summary>
            List Invites received from other users
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.List`1"/>
            </returns>
        </member>
        <member name="M:TextIt.Controllers.InviteController.AcceptInvite(System.String)">
            <summary>
            Accept an <see cref="T:TextIt.Models.GameInvite"/>
            </summary>
            <param name="inviteId">The Id of the <see cref="T:TextIt.Models.GameInvite"/></param>
            <returns>
            A <see cref="T:TextIt.Models.GameInvite"/> if accepted, else HTTP Error
            </returns>
        </member>
        <member name="T:TextIt.Helpers.FacebookHelper">
            <summary>
            Facebook Helper
            </summary>
        </member>
        <member name="M:TextIt.Helpers.FacebookHelper.GetUserFriendsAsync(TextIt.Models.ApplicationDbContext,TextIt.Models.ApplicationUser)">
            <summary>
            Get <see cref="T:TextIt.Models.ApplicationUser"/>s Friends
            </summary>
            <param name="context"><see cref="T:TextIt.Models.ApplicationDbContext"/></param>
            <param name="user"><see cref="T:TextIt.Models.ApplicationUser"/> that you wish to get friends from</param>
            <returns>
            A <see cref="T:System.Collections.Generic.List`1"/> of friends
            </returns>
        </member>
        <member name="T:TextIt.Models.ApplicationUser">
            <summary>
            Application User For The Web Server
            </summary>
        </member>
        <member name="P:TextIt.Models.ApplicationUser.FacebookId">
            <summary>
            Facebook Id to be used with Graph API requests
            </summary>
        </member>
        <member name="P:TextIt.Models.ApplicationUser.FacebookAccessToken">
            <summary>
            Facebook Access Token to be used with Graph API requests
            </summary>
        </member>
        <member name="P:TextIt.Models.ApplicationUser.Name">
            <summary>
            The Full Name Of The User
            </summary>
        </member>
        <member name="P:TextIt.Models.ApplicationUser.Gender">
            <summary>
            The Gender Of the User (Facebook Collected)
            </summary>
        </member>
        <member name="P:TextIt.Models.ApplicationUser.Verified">
            <summary>
            If the user is verfiyed on facebook or not
            </summary>
        </member>
        <member name="P:TextIt.Models.ApplicationUser.CoverPicture">
            <summary>
            The Users facebook cover picture (null if none)
            </summary>
        </member>
        <member name="P:TextIt.Models.ApplicationUser.ProfilePicture">
            <summary>
            The Users Facebook profile picture
            </summary>
        </member>
        <member name="P:TextIt.Models.ApplicationUser.Games">
            <summary>
            The Games that this user is accociated to
            </summary>
        </member>
        <member name="M:TextIt.Models.ApplicationUser.GenerateUserIdentityAsync(Microsoft.AspNet.Identity.UserManager{TextIt.Models.ApplicationUser},System.String)">
            <summary>
            Generate ClaimsIdentity For User
            </summary>
            <param name="manager"></param>
            <param name="authenticationType"></param>
            <returns></returns>
        </member>
        <member name="T:TextIt.Models.Gender">
            <summary>
            The Facebook Gender Model
            </summary>
        </member>
        <member name="T:TextIt.Models.ApplicationDbContext">
            <summary>
            Main Database Context
            </summary>
        </member>
        <member name="P:TextIt.Models.ApplicationDbContext.Games">
            <summary>
            All Games In The Database
            </summary>
        </member>
        <member name="P:TextIt.Models.ApplicationDbContext.GameInvites">
            <summary>
            All GameInvites In the Database
            </summary>
        </member>
        <member name="P:TextIt.Models.ApplicationDbContext.GameApplications">
            <summary>
            All Game Applications in the Data base
            </summary>
        </member>
        <member name="M:TextIt.Models.ApplicationDbContext.#ctor">
            <summary>
            Construct an <see cref="T:TextIt.Models.ApplicationDbContext"/>
            </summary>
        </member>
        <member name="M:TextIt.Models.ApplicationDbContext.Create">
            <summary>
            Construct an <see cref="T:TextIt.Models.ApplicationDbContext"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:TextIt.Models.ApplicationDbContext.OnModelCreating(System.Data.Entity.DbModelBuilder)">
            <summary>
            Create Linkings within EF Code First
            </summary>
            <param name="modelBuilder"></param>
        </member>
        <member name="T:TextIt.Models.GameApplication">
            <summary>
            A Game Application (Ie. GameType)
            
            A Game Application contains infomation about a game.
            </summary>
        </member>
        <member name="M:TextIt.Models.GameApplication.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:TextIt.Models.GameApplication.Id">
            <summary>
            The Game Application ID.
            Used for any request to the <see cref="T:TextIt.Controllers.GameController"/>
            </summary>
        </member>
        <member name="P:TextIt.Models.GameApplication.Name">
            <summary>
            The Games Name
            </summary>
        </member>
        <member name="P:TextIt.Models.GameApplication.MinPlayers">
            <summary>
            The Min amount of players for this game
            </summary>
        </member>
        <member name="P:TextIt.Models.GameApplication.MaxPlayers">
            <summary>
            The Max amount of players for this game
            </summary>
        </member>
        <member name="P:TextIt.Models.GameApplication.GameStateType">
            <summary>
            The Type.AssemblyQualifiedName of the GameState that relates to this game.
            </summary>
        </member>
        <member name="P:TextIt.Models.GameApplication.Order">
            <summary>
            The order in which to sort this game item apart from all others
            </summary>
        </member>
        <member name="P:TextIt.Models.GameApplication.Categories">
            <summary>
            The <see cref="T:TextIt.Models.GameApplication.GameCategory"/>'s for this game
            </summary>
        </member>
        <member name="P:TextIt.Models.GameApplication.CategoriesList">
            <summary>
            The Database Backing for <see cref="P:TextIt.Models.GameApplication.Categories"/>.
            </summary>
        </member>
        <member name="T:TextIt.Models.GameApplication.GameCategory">
            <summary>
            A Category identifying what a <see cref="T:TextIt.Models.GameApplication"/> is. Used mainly for filtering  purposes.
            </summary>
        </member>
        <member name="P:TextIt.Models.GameApplication.Flow">
            <summary>
            The <see cref="T:TextIt.Models.GameApplicationFlow"/> associated to this <see cref="T:TextIt.Models.GameApplication"/>
            </summary>
        </member>
        <member name="T:TextIt.Models.GameApplicationFlow">
            <summary>
            A Flow for the <see cref="T:TextIt.Models.GameApplication"/>.
            </summary>
        </member>
        <member name="P:TextIt.Models.GameApplicationFlow.Id">
            <summary>
            Game Flow id
            </summary>
        </member>
        <member name="P:TextIt.Models.GameApplicationFlow.RowSpan">
            <summary>
            The Flow Row Span
            </summary>
        </member>
        <member name="P:TextIt.Models.GameApplicationFlow.ColSpan">
            <summary>
            The Flow Col Span
            </summary>
        </member>
        <member name="P:TextIt.Models.GameApplicationFlow.Style">
            <summary>
            The Css Style for the Flow Object
            </summary>
        </member>
        <member name="P:TextIt.Models.GameApplicationFlow.StyleString">
            <summary>
            The Database backing for <see cref="P:TextIt.Models.GameApplicationFlow.Style"/>
            </summary>
        </member>
        <member name="P:TextIt.Models.GameApplicationFlow.IconPath">
            <summary>
            The path of the Icon on the client
            </summary>
        </member>
        <member name="T:TextIt.Models.Game">
            <summary>
            A Game that is created for a <see cref="T:TextIt.Models.ApplicationUser"/>, can have many players, depending on the <see cref="P:TextIt.Models.Game.GameApplication"/> associated. 
            </summary>
        </member>
        <member name="P:TextIt.Models.Game.Id">
            <summary>
            The Game Id (<see cref="T:System.Guid"/>)
            </summary>
        </member>
        <member name="P:TextIt.Models.Game.GameApplication">
            <summary>
            The <see cref="P:TextIt.Models.Game.GameApplication"/> for this game
            </summary>
        </member>
        <member name="P:TextIt.Models.Game.CreatedDate">
            <summary>
            The Date this game was created
            </summary>
        </member>
        <member name="P:TextIt.Models.Game.Owner">
            <summary>
            The <see cref="T:TextIt.Models.ApplicationUser"/> that created this game
            </summary>
        </member>
        <member name="P:TextIt.Models.Game.Players">
            <summary>
            The <see cref="T:System.Collections.Generic.List`1"/> that are playing this game.
            Will contain the <see cref="P:TextIt.Models.Game.Owner"/> as the first player.
            </summary>
        </member>
        <member name="P:TextIt.Models.Game.GameState">
            <summary>
            The Compressed Game State Database Backing Model
            </summary>
        </member>
        <member name="M:TextIt.Models.Game.GetGameState(System.Boolean)">
            <summary>
            Get the GameState Associated to this Game.
            </summary>
            <param name="load">
            Wether or not it should load the <see cref="P:TextIt.Models.Game.GameState"/> or if it should just construct it.
            If the game is already loaded this parameter is ignored.
            </param>
            <returns>
            If the game state is currently running in the <see cref="T:TextIt.Hubs.LobbyHub"/> it will collect it from there,
            otherwise it will collect it from the database.
            </returns>
        </member>
        <member name="T:TextIt.Models.GameInvite">
            <summary>
            A Game invite between two <see cref="T:TextIt.Models.ApplicationUser"/>'s
            
            </summary>
        </member>
        <member name="P:TextIt.Models.GameInvite.Id">
            <summary>
            The Invite ID (<see cref="T:System.Guid"/>)
            </summary>
        </member>
        <member name="P:TextIt.Models.GameInvite.Game">
            <summary>
            The Created <see cref="P:TextIt.Models.GameInvite.Game"/> associated to this Invite
            </summary>
        </member>
        <member name="P:TextIt.Models.GameInvite.Inviter">
            <summary>
            The <see cref="T:TextIt.Models.ApplicationUser"/> who sent the invite.
            
            Is also the <see cref="P:TextIt.Models.GameInvite.Game"/>.Owner
            </summary>
        </member>
        <member name="P:TextIt.Models.GameInvite.Invitee">
            <summary>
            The <see cref="T:TextIt.Models.ApplicationUser"/> who recived the invite.
            </summary>
        </member>
        <member name="P:TextIt.Models.GameInvite.CreateDate">
            <summary>
            The <see cref="T:System.DateTime"/> this invite was created
            </summary>
        </member>
        <member name="P:TextIt.Models.GameInvite.Expiry">
            <summary>
            The <see cref="T:System.DateTime"/> this invite will expire
            </summary>
        </member>
    </members>
</doc>
